/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//#include <boards/shields/corne_antar/boards/nice_nano.overlay>

#define ZMK_BEHAVIORS_OMIT_KT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        ctrl-z {
            bindings = <&kp LC(Z)>;
            key-positions = <25 23>;
        };

        ctrl-x {
            bindings = <&kp LC(X)>;
            key-positions = <26 23>;
        };

        ctrl-c {
            bindings = <&kp LC(C)>;
            key-positions = <27 23>;
        };

        ctrl-v {
            bindings = <&kp LC(V)>;
            key-positions = <28 23>;
        };

        ctrl-shift-c {
            bindings = <&kp LC(LS(C))>;
            key-positions = <37 27 23>;
        };

        ctrl-shift-v {
            bindings = <&kp LS(LC(V))>;
            key-positions = <37 28 23>;
        };

        ctrl-z-2 {
            bindings = <&kp LC(Z)>;
            key-positions = <12 25>;
        };

        ctrl-x-2 {
            bindings = <&kp LC(X)>;
            key-positions = <12 26>;
        };

        ctrl-c-2 {
            bindings = <&kp LC(C)>;
            key-positions = <27 12>;
        };

        ctrl-v-2 {
            bindings = <&kp LC(V)>;
            key-positions = <12 28>;
        };

        ctrl-shift-c-2 {
            bindings = <&kp LC(LS(C))>;
            key-positions = <12 37 27>;
        };

        ctrl-shift-v-2 {
            bindings = <&kp LS(LC(V))>;
            key-positions = <12 28 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |       |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |       |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |       |  N  |  M   |  ,  |  .  |  -  | SHFT(RET) |
            //                    | WIN | LWR | SPA |       | RTN | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt LEFT_GUI RIGHT_BRACKET     &kp Q  &kp W  &kp E            &kp R                 &kp T        &kp Y        &kp U                   &kp I         &kp O    &kp P      &mt RIGHT_GUI LEFT_BRACKET
&mt LCTRL GRAVE                &kp A  &kp S  &kp D            &kp F                 &kp G        &kp H        &kp J                   &kp K         &kp L    &kp SEMI   &mt RCTRL SQT
&mt LEFT_ALT NON_US_BACKSLASH  &kp Z  &kp X  &kp C            &kp V                 &kp B        &kp N        &kp M                   &kp COMMA     &kp DOT  &kp SLASH  &mt RIGHT_ALT MINUS
                                             &lt 2 BACKSPACE  &mt LEFT_SHIFT SPACE  &lt 1 TAB    &lt 1 ENTER  &mt RIGHT_SHIFT ESCAPE  &lt 2 DELETE
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |  ESC |  1   |  2  |  3   |  4     |  5  |          |  6  |  7  |  8  |  9  |  0   |    DEL   |
            // |  CAPS|      |     |      |        |     |          | HOME| PGUP|  UP |PGDN |  ?   |     ^    |
            // | SHFT | UNDO | CUT | COPY | PASTE| |     |          | END | LFT | DWN | RGT | PRSC | SHFT(RET)|
            //                              |     |     |          | RET | ADJ |    |

            display-name = "Low";
            bindings = <
&kp LEFT_GUI      &kp ASTERISK     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS      &kp EXCLAMATION  &kp AT_SIGN     &kp HASH       &kp DOLLAR            &kp PERCENT            &kp RIGHT_GUI
&kp LEFT_CONTROL  &kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS     &kp CARET        &kp AMPERSAND   &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_CONTROL
&kp LEFT_ALT      &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &kp EQUAL        &kp UNDERSCORE  &kp LESS_THAN  &kp GT                &kp QUESTION           &kp RIGHT_ALT
                                                    &lt 3 BACKSPACE  &trans           &trans        &trans           &trans          &lt 3 DELETE
            >;
        };

        // -----------------------------------------------------------------------------------------
        // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  &  |  /  |  (  |  )  |  =  | DEL |
        // | CTRL |   ? |     |     |     |     |   |  -  |  *  |  [  |  ]  |  \  |  `   |
        // | <    |   > |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
        //                    | GUI | LWR | SPC |   | ENT | RSE | ALT |

        raise_layer {
            display-name = "Top";
            bindings = <
&kp LEFT_GUI      &kp F1  &kp F2   &kp F3   &kp F4   &kp CAPSLOCK          &msc SCRL_UP    &kp HOME        &kp UP_ARROW             &kp PAGE_UP      &kp INSERT       &kp RGUI
&kp LEFT_CONTROL  &kp F5  &kp F6   &kp F7   &kp F8   &kp K_APP             &msc SCRL_LEFT  &kp LEFT_ARROW  &kp DOWN_ARROW           &kp RIGHT_ARROW  &msc SCRL_RIGHT  &kp RIGHT_CONTROL
&kp LEFT_ALT      &kp F9  &kp F10  &kp F11  &kp F12  &kp LA(LEFT_SHIFT)    &msc SCRL_DOWN  &kp END         &kp LC(LS(PRINTSCREEN))  &kp PAGE_DOWN    &kp PRINTSCREEN  &kp RIGHT_ALT
                                   &trans   &trans   &lt 3 TAB             &lt 3 ENTER     &trans          &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |  F1      |  F2      |  F3      | F4       |    F5   |  F6     |   |    F7   |   F8  |    F9   |   F10 |   F11 | F12    |
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |  BL_TOG | RGB TOG |   |    BT1  |   BT2 |   BT3   |   BT4 |   BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |         |  EP_TOG |   |    USB  |   BLE |K_SLEEP  |       |       |  RESET |
            //                                              |     |     |     |     |     |

            display-name = "Fun";
            bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_CLR           &kp C_VOLUME_UP  &kp C_NEXT        &kp C_BRIGHTNESS_INC  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none         &rgb_ug RGB_TOG      &kp C_VOL_DN     &kp C_PREVIOUS    &kp C_BRIGHTNESS_DEC  &none            &none           &none
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none         &ext_power EP_TOG    &kp C_MUTE       &kp C_PLAY_PAUSE  &kp K_SLEEP           &none            &none           &studio_unlock
                                                   &trans           &bootloader   &trans               &trans           &bootloader       &trans
            >;
        };

        layer_4 {
            display-name = "Red";
            status = "reserved";
        };

        layer_5 {
            display-name = "Green";
            status = "reserved";
        };

        layer_6 {
            display-name = "Blue";
            status = "reserved";
        };
    };
};

&led_strip { chain-length = <21>; };

